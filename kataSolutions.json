[
  {
    "id": "515de9ae9dcfc28eb6000001",
    "name": "Split Strings",
    "solutions": [
      {
        "lanugage": "javascript",
        "solution": "const wrap = f => {\n  \n    const checkIfLastIdxIsValid = (ar) => {\n      let lastIdx = ar[ar.length - 1];\n      \n      return lastIdx.length === 1 ? (ar[ar.length - 1] = lastIdx+\"_\", ar) : ar;\n    } \n  \n    return f.length > 0 ? checkIfLastIdxIsValid(f) : f;\n}\n\nconst solution = s => wrap(((s.split(\"\")).reduce((acc, cur, idx) => {\n  const i = Math.floor(idx / 2);\n  acc[i] = acc[i] ? (acc[i] + cur) : cur;\n  console.log(acc);\n  return acc;\n}, [])))"
      }
    ]
  },
  {
    "id": "55b42574ff091733d900002f",
    "name": "Friend or Foe?",
    "solutions": [
      {
        "lanugage": "javascript",
        "solution": "const friend = f => f.filter(ff => ff.length === 4);"
      }
    ]
  },
  {
    "id": "5502c9e7b3216ec63c0001aa",
    "name": "Categorize New Member",
    "solutions": [
      {
        "lanugage": "javascript",
        "solution": " const openOrSenior = d => d.map(i => { let age = i[0], cap = i[1]; return age >= 55 && cap > 7 ? \"Senior\" : \"Open\"; });"
      }
    ]
  },
  {
    "id": "5467e4d82edf8bbf40000155",
    "name": "Descending Order",
    "solutions": [
      {
        "lanugage": "javascript",
        "solution": "const descendingOrder = (n) => parseInt(n.toString().split('').sort().reverse().join(''))"
      }
    ]
  },
  {
    "id": "514b92a657cdc65150000006",
    "name": "Multiples of 3 or 5",
    "solutions": [
      {
        "lanugage": "javascript",
        "solution": "const solution = n => n <= 0 ? 0 : [...Array(n).keys()].map(i => i).reduce((acc, cur) => (cur % 3 === 0 || cur % 5 === 0) && cur >= 3 ? acc + cur : acc);"
      }
    ]
  }
]
